@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@using Blazored.Toast.Configuration

<MudThemeProvider Theme="Theme" />
<MudDialogProvider MaxWidth="MaxWidth.Large" CloseButton="true"/>
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Dense="true" Elevation="3">
        <MudContainer>
            <MudIconButton Icon="@Icons.Material.Filled.Dehaze" 
                       Color="Color.Primary" 
                       Edge="Edge.Start" 
                       OnClick="ToggleDrawer"/>
        </MudContainer>
        <MudSpacer/>
        <TopMenu/>
    </MudAppBar> 
    <div id="threejscontainer" style="width: 100vw; 
                                      height: 100vh; 
                                      display: block; 
                                      position: fixed; 
                                      top: 0; 
                                      left: 0; 
                                      z-index: -9999; 
                                      overflow:hidden;"></div>
    <MudDrawer @bind-Open="DrawerOpen" Variant="DrawerVariant.Mini" Elevation="1">
        <MudDrawerHeader Style="align-items: center">
            <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" 
                     Color="Color.Error" 
                     Size="Size.Large">
            </MudIcon>
            <MudText Color="Color.Error" 
                     Typo="Typo.h5"
                     Style="padding-left: 10px">MudBlazor
            </MudText>
        </MudDrawerHeader>
        <NavMenu DrawerOpen="DrawerOpen">
        @if (DrawerOpen)
        {
            <MudElement Style="margin-top:10px; margin-left:15px" HtmlTag="img" class="img-fluid"/>
        }
        else
        {
            <MudElement Style="margin-top:10px; margin-left:15px" HtmlTag="img" class="img-fluid"/>
        }
        </NavMenu>
    </MudDrawer>
    <MudMainContent Class="pt-16">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<BlazoredToasts Position="ToastPosition.BottomRight"/>

@code 
{
    bool useThreeJs = false;
    bool DrawerOpen { get; set; } = true;
    const string canvasId = "canvas-id";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (useThreeJs)
        {
            await JSRuntime.InvokeVoidAsync("ThreeJSFunctions.load");
        }
    }

    void ToggleSettings()
    {

    }

    void ToggleDrawer()
    {
        DrawerOpen = !DrawerOpen;
    }

    MudTheme Theme = ThemesProvider.MudThemeProvider.CreateMainMudTheme();
}