@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ILogoutService LogoutService

<MudNavMenu>
@ChildContent
<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">

                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="build">
                        <span class="oi oi-wrench" aria-hidden="true"></span> Build
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="army">
                        <span class="oi oi-people" aria-hidden="true"></span> My Army
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="register">
                        <span class="oi oi-pencil" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3" style="@(LogoutService.isAuthenticated == true ? "opacity: 100%" : "opacity: 50%");
                                              @(LogoutService.isAuthenticated == true ? "pointer-events: auto" : "pointer-events: none");">
                    <a class="nav-link" @onclick="Logout" style="cursor: pointer">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </a>
            </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3" style="@(LogoutService.isAuthenticated == true ? "opacity: 100%" : "opacity: 50%");
                                                  @(LogoutService.isAuthenticated == true ? "pointer-events: auto" : "pointer-events: none");">
                    <a class="nav-link" @onclick="Logout" style="cursor: pointer">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                    </a>
            </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>
</MudNavMenu>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public bool DrawerOpen { get; set; }
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override Task OnInitializedAsync()
    {
        LogoutService.OnChange += StateHasChanged;
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        LogoutService.OnChange -= StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await ((CustomAuthStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
        await LogoutService.NotAuthenticated();
        NavigationManager.NavigateTo("/");
    }
}
