@page "/army"
@using BlazorGrpcWebApp.Shared.MudTablesModels
@inject IUnitService UnitService
@attribute [Authorize]

<MudGrid>
   <MudItem xs="12">
       <MudCard>
           <MudCardHeader>
                <MudIcon Icon="@Icons.Material.Filled.Info"/>My Army
           </MudCardHeader>
           <MudCardContent>
                @if (grpcUnitsResponses.Count > 0)
                {
                    <MudTable Items="@MyUnitsToMudTable" Hover="true">
                        <HeaderContent>
                            <MudTh>Unit</MudTh>
                            <MudTh>Nr</MudTh>
                            <MudTh>Hit Points</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Nr">@context.img</MudTd>
                            <MudTd DataLabel="Sign">@context.userUnit.UnitId</MudTd>
                            <MudTd DataLabel="Hit Points">@context.userUnit.HitPoints</MudTd>
                        </RowTemplate>
                    </MudTable>
               }
               else
               {
                    <span>Loading...</span>    
               }   
        </MudCardContent>
        </MudCard>
   </MudItem> 
</MudGrid>

@code {
    private IList<GrpcUnitResponse> grpcUnitsResponses = new List<GrpcUnitResponse>();
    private IList<MyUnit> MyUnitsToMudTable = new List<MyUnit>();

    protected override async Task OnInitializedAsync()
    {
        //await UnitService.LoadUnitsAsync();
        grpcUnitsResponses = await UnitService.DoGetGrpcUnits(UnitService.deadline);
        await PopulateUnits();

    }

    private async Task PopulateUnits()
    {
        foreach (var unit in UnitService.MyUnits)
        {
            MyUnitsToMudTable.Add(new MyUnit() { img = "", userUnit = unit });
        }
    }
}
